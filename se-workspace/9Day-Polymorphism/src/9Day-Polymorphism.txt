						**9일차(2020.07.20)수업목차**
review
java.lang.Object
toString()
!!!!!Polymorphism(다형성) → 중요개념!!
Object Casting
******************************************************************
UML(통합모델링언어) - Class Diagram의 relation 중
									현재까지 공부한 내용을 정리
									
	-Generalization(일반화) - is a relationship
		ex) 사람은 동물이다. 개는 동물이다.
			  매니저는 사원이다. 엔지니어는 사원이다.
			Generalization이 상속관계이다.
	
	-Association(연관) - use a relationship
		ex) 사람이 렌트카를 이용하다.
		
	-Aggregation(집합) - has a relationship
		ex) 사람이 스마트폰을 소유하고 사용하다.
		
	-Composition(구성) - consist of
		ex) 자동차는 엔진을 반드시 필요로 한다.
		
	-Inheritance(상속)
		why? 부모 멤버(속성,기능)을 물려받아 재사용.
				  →자식 클래스는 자신의 독자적인 속성과 기능만을
				  	  정의하면 되므로 생산성이 향상된다.
				  	  계층 구조 형성을 통한 다형성 적용환경을 마련.
				  	  (이 부분은 다형성을 공부할 떄 이야기할꺼임)
	
	-Keyword:
		this → 현재 객체를 가르킨다.
		super → 부모 객체를 가르킨다.
		super() → 부모 생성자를 호출하여 부모 객체를 생성
		
		extends: 상속시 사용하는 키워드
					  부모 클래스(or 객체)를 확장하여
					  자식 클래스를(or 객체)를 정의한다.
					  
		super() 원리:
		
		class A{}
			A(){super();} //이 부분은 명시하지 않으면 자동삽입
		}
		class B extends A{
			B(){super();}	
		}
-------------------------------------------------------------------------------------------
다른 main이 있는 클래스에서 new B()를 실행하면
B 객체에 앞서 A 객체 생성 후 B객체 생성된다.

	-오버로딩과 오버라이딩
		오버로딩 → 같은 이름의 메서드를 다양한 매개변수로 정의
		메서드 오버라이딩 → 상속받은 부모 메서드를 자신에 맞게
									   재정의
********************************************************************
java.lang.object
	Class Object is the root of the class hierarchy. Every class has Object as a superclass.
	All objects, including arrays, implement the methods of this class.
	:자바 클래스의 최상위 클래스
	 자바 계층구조의 root
	 특정한 클래스를 상속받지 않으면 자동으로 extends Object된다.
	 즉 모든 자바 클래스(객체)는 Object의 자식이 된다.
	 	 (모든 자바 클래스(객체)는 Object의 기능을 가지게 된다)
	 	 
java.lang.Object의 toString() 메서드
: 기본 기능을 객체의 주소값을 반환하는 역할
  주로 사용되는 경우는 자식 클래스에서 toString() 메서드를
  오버라이딩해서 사용(실제값(객체의 속성정보)을 반환하도록 재정의해서
  사용)
 *******************************************************************
 	-	Polymorphism(다형성)
 		:객체 지향의 주요 개념
 		
 		Polymorphism 개념: 다양한 형태를 가지는 성질
 		→ 하나의 메세지 방식으로
 			 다양한 객체들이
 			 각자의 방식으로 동작하는 성질
 			 ex) 재생버튼( 단일 메세지 방식)을 누르면
 			 	   다양한 객체들(유뷰트, 알송플레이어, CD플레이어 등)
 			 	   각자의 방식으로 동작한다(동영상 재생, 음원 재생, CD 재생)
 			 	   
 		"One Interface, Multiple Implements"	-	하나의 인터페이스로 다양한 구현
 		
 		-소프트웨어 공학에서는
 		시스템을 응집도(cohesion)는 높이고,
 		결합도(coupling)는 낮게 만드는 것을 원칙으로 한다.
 		높은 응집도란 시스템의 모듈이 자신의 역할에 충실한 것을 의미,
 		낮은 결합도란 시스템의 모듈간에 의존도를 최소화하는 것을 의미한다.
 ******************************************************************
 	-	instanceof  연산자
 		:객체의 타입을 비교한다. is a 관계이면 true를 반환
 		
 	-	Object casting(Object down casting)
 	부모 타입의 변수에 자식 객체를 참조할 경우
 	상속받은 부모 속성과 기능을 사용할 수 있고
 	오버라이딩한 메서드 사용가능하다.
 	단, 자식의 독자적멤버(속성과 기능)에 접근할 경우에는
 	Object Down Casting절차가 필요하다.
 	ex) Person p=(Person)a; // a 참조변수를 Person타입으로 형변환
 			p.study();
 			
 			**10일차 주요 목차**
 			-Polymorphism review 및 연습예제








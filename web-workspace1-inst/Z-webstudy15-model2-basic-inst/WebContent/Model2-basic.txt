**Model 2 Architecture Basic**
기존 방식 ( 설계방식 적용하지 않은 상태 ) 
JSP <---> Database 

Model 1 Architecture 
JSP <--> Java Beans( component ) <--> Database 
참고) component 란 여러 object들이 모여 독립적 기능단위를 이루는 것을 말함

Model 2 Architecture ( MVC Design Pattern 이 적용 ) 

client ---->      Controller(Servlet) <---> Model(JavaBeans) <---> Database 
						|
						|  forward 방식과 redirect 방식   
						|
		<----  	View(JSP) 	
		
 Model : 주기술은 java beans( java class 들 ) 
 		  비즈니스로직과 데이터액세스로직을 담당 
 		  	
 View : 주기술 JSP 
 		 클라이언트에게 응답하는 화면(or 데이터)를 제공 
 		 
 Controller : 주기술 Servlet
 			   웹어플리케이션의 제어자 역할 
 			   클라이언트의 요청을 분석 
 			  Model 계층과 연동 
 			  클라이언트에게 적절한 응답 형태를 선택해 View로 응답하게 한다  
 				
 Controller(Servlet)에서 View(JSP)를 제어하는 방식 (이동방식)				
 1. forward 방식 
 :	 request와 response가 유지되면서 이동되는 방식 
     Model과 연동한 결과를 request.setAttribute(name,value) 로
      공유하고 view는 request.getAttribute(name)으로 정보를 확인할 수 있다.
     웹컨테이너 상에서 이동되므로 브라우저 상에서 클라이언트 요청 url은 
     변경되지 않고 이동 여부를 클라이언트 브라우저는 알지 못한다. 
     재요청시 기존 동작이 반복된다.      				
    주요코드) request.getRequestDispatcher("select_ok.jsp").forward(request,response);	
    
    주로 forward은 정보 조회용(db sql:select)으로 사용된다			
 				
 2. redirect 방식 				
 	: 응답시(response)  client browser에게 이동을 명령하는 방식 
 	  기존 request와 response는 유지되지 않는다 , 브라우저가 새로운 request를 통해 
 	  응답화면을 보게 된다. 
 	  재요청시 기존 동작이 반복되지 않는다 
 	  
 	  			
 				
 				
 				
 				
 				
 				
 						 
 		 
 		 
 		 
 		 
 		 
 		 
 		 
 		 
 		 
 		 
 		 
 		 		  
		
		
		
		
		
		
		
		
		















